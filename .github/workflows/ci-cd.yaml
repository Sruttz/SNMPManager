name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            web-client/package-lock.json
            web-server/package-lock.json
            snmp-agent/package-lock.json

      - name: Install dependencies - Web Client
        working-directory: ./web-client
        run: npm ci

      - name: Install dependencies - Web Server
        working-directory: ./web-server
        run: npm ci

      - name: Install dependencies - SNMP Agent
        working-directory: ./snmp-agent
        run: npm ci

      - name: Run Web Client Tests
        working-directory: ./web-client
        run: npm test -- --coverage --watchAll=false

      - name: Run Web Server Tests
        working-directory: ./web-server
        run: npm test -- --coverage || true

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ./web-client/coverage/coverage-final.json,./web-server/coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  build-and-push:
    name: Build and Push Docker Images
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Web Client
        id: meta-client
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/snmp-web-client
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Web Client
        uses: docker/build-push-action@v4
        with:
          context: ./web-client
          push: true
          tags: ${{ steps.meta-client.outputs.tags }}
          labels: ${{ steps.meta-client.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for Web Server
        id: meta-server
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/snmp-web-server
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Web Server
        uses: docker/build-push-action@v4
        with:
          context: ./web-server
          push: true
          tags: ${{ steps.meta-server.outputs.tags }}
          labels: ${{ steps.meta-server.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for SNMP Agent
        id: meta-agent
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/snmp-agent
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push SNMP Agent
        uses: docker/build-push-action@v4
        with:
          context: ./snmp-agent
          push: true
          tags: ${{ steps.meta-agent.outputs.tags }}
          labels: ${{ steps.meta-agent.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Kubernetes
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      - name: Configure Kubernetes
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/namespace.yaml
          kubectl apply -f kubernetes/web-client-deployment.yaml
          kubectl apply -f kubernetes/web-server-deployment.yaml
          kubectl apply -f kubernetes/snmp-agent-deployment.yaml
          kubectl apply -f kubernetes/services.yaml

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/web-client -n snmp-system
          kubectl rollout status deployment/web-server -n snmp-system
          kubectl rollout status deployment/snmp-agent -n snmp-system

      - name: Get deployment status
        run: |
          kubectl get pods -n snmp-system
          kubectl get services -n snmp-system